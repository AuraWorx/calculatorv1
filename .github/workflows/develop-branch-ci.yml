name: Develop Branch CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  develop-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt

    # - name: Lint and format check
    #   run: |
    #     source .venv/bin/activate
    #     black --check --diff .
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    # - name: Run unit tests
    #   run: |
    #     source .venv/bin/activate
    #     pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=80

    - name: SonarCloud Scan (Blocking)
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=calculator-api
          -Dsonar.organization=your-org
          -Dsonar.sources=app
          -Dsonar.tests=tests
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.8
          -Dsonar.qualitygate.wait=true

    - name: Deploy to Development Environment
      if: github.ref == 'refs/heads/develop'
      run: |
        echo "🚀 Deploying to Development Environment..."
        echo "📦 Building application..."
        echo "🔧 Installing dependencies..."
        echo "🚀 Starting deployment..."
        echo "✅ Dev Deploy done!"
        echo ""
        echo "🌐 Development Environment: https://dev-calculator-api.example.com"
        echo "📊 Health Check: https://dev-calculator-api.example.com/health"
